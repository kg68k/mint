		[ mint v3 拡張機能マニュアル ]


　このファイルでは、mint version 3.00 以降で追加・拡張された機能を解説し
ています。


・拡張されたシステム変数

　以下のシステム変数は、設定内容が拡張されました。詳細は
man/mintenv_sys.man を参照して下さい。

%cals
	　上位バイトに文字コード、下位バイトに 0x00 を指定すると、従来の
	%cals 0 とほぼ同じで、年月日の区切り記号を指定した文字に変更する
	ようになります(標準＝%cals 0 の場合は `/')。

%case
	　2 を指定すると、&i-search が (V)TwentyOne.sys の +C/-C の設定
	状況に追随するようになります。

%cbcl
	　+16 するとカーソルを点線で描画するようになります。

%mdxt
	　枠の表示モードは %dbox に移動されました。現在は 0(表示しない)、
	1(表示する)だけが指定できます。

%moct
	　0 を指定すると、メディア検査を行わなくなります。

%wind
	　確か +16 だかなんだかでちょっと動作が違ってたような気がします
	が忘れました。現在は 0、1、2 しか指定できません。

%winf
	　3 を指定すると、従来の %winf 0 とほぼ同じで、長い拡張子を右寄
	せにして表示するモードになります。これは %winf 0 で使っていた人
	にお勧めです。


・追加されたシステム変数

　以下のシステム変数が追加されました。詳細は man/mintenv_sys.man を参照
して下さい。

%achr
	　arc-selector でファイルを改変したのに書庫へ書き戻さなかった場
	合にはそのファイルが $MINTTMP にそのまま残っていましたが、1 を指
	定するとファイルを削除するようになります。

%datc
	　キャッシュ状態表示窓で、データキャッシュオンの時に使用するパレ
	ット番号を指定します。

%dbox
	　&data-title のタイトル表示の枠の色を 1～3 で指定します。0 の場
	合は枠を描画しません。

%dttl
	　&data-title の動作モードを指定します。0 で動作しない、1 で動作
	する、2 で拡張子判別動作を行います。2 がお勧めです。

%gton
	　&gvon で「半輝度」終了時に実際に設定する輝度を指定します(それ
	を半輝度というのはヘンですが…)。0xffff で従来と同じですが、これ
	でも眩しいと感じる場合は 16 あたりを指定するとよいと思います。

%his2
	　1 を指定すると、パスヒストリを左右のウィンドウで別々に保持する
	ようになります。

%hist
	　コマンドヒストリのバッファサイズをバイト単位で指定します。0 の
	場合はバッファを確保しません。

%hisc
	　&path-history-menu の最初の選択文字を指定します。0x30('0') や
	0x61('a') が良いでしょう。

%intc
	　キャッシュ状態表示窓で、命令キャッシュオンの時に使用するパレッ
	ト番号を指定します。

%macl
	　マーク情報の表示部分の、単位などを描画するパレット番号を指定し
	ます。

%mbox
	　演奏中音楽タイトルの枠の色を 1～3 で指定します。0 の場合は枠を
	描画しません。

%mesl
	　&print の表示座標を指定します。通常は 0xffff で構いません。

%obcl
	　反対側ウィンドウのカーソル描画色を 1～3 で指定します(+16 する
	と点線で描画)。0 の場合は反対側カーソルを描画しません。

%rcdk
	　RCD や lndrv のような常駐検査に比較的時間のかかるドライバへの
	対応を抑制します。%rcdk 1 で RCD、2 で lndrv、3 で両方への対応を
	抑制します。特に設定する必要はありません(気分の問題)。

%regw
	　@exec や @jump などの登録メニューの横幅を指定します。8～56 の
	偶数を指定します(省略時 32)。

%scrl
	　&cursor-up 及び &cursor-down でカーソルが画面の上端や下端にあ
	った場合はスクロールしますが、実際にスクロールする行数を指定しま
	す。1 を指定すると従来同様の挙動になりますが、$dirh/2 あたりを指
	定すると MicroEMACS ライクな挙動になります。

%srtr
	　ディレクトリソートの条件をデフォルトで逆順にしておくことが出来
	ます(ソート種類別に指定可能)。%srtm の設定や &sort-menu の選択時
	にも有効です。

%vexl
	　&look-file から >V_EXEC が実行された時に、カーソル(下線)位置の
	行番号が $MINTVLINE に設定されますが、カーソルが表示されなかった
	時に「最上列から何行目を設定するか」を指定します。

%volp
	　1 を指定するとボリュームラベルの表示から拡張子のピリオドを削除
	します。

%vsec
	　&look-file で、エスケープシーケンスで隠し属性になった文字の表
	示属性を指定します。通常は 0 なので見えませんが、3 などを指定す
	ると見逃すことがありません。

%zmst
	　&data-title、&pdx-filename で .zms ファイルから検索の為に読み
	込む行数を指定します。あまり大きい数を指定するとタイトルや .zpd
	ファイル名の含まれない .zms ファイルの処理が遅くなります。

　現在有効なシステム変数とそのデフォルト値が man/sysval.5 にあります。


・追加されたシステム予約変数

$PM = $PMARK
	　$M = $MARK とほぼ同じですが、それぞれのファイル名の前にパス名
	も展開します。

$PMARK_R
	　$MARK_R とほぼ同じですが、それぞれのファイル名の前にパス名も展
	開します。

$STATUS
	　@status の値を返します。

$MPUTYPE
	　MPU の種類を 0～6 で返します。

$MINTRC
	　mint が読み込んだ定義ファイル名をフルパスで返します。

　$F、$M などはカーソル側ウィンドウの情報を展開しますが、反対側ウィンド
ウの情報を展開する変数を追加しました。追加された変数は以下の通りです。

	カーソル側	反対側(追加)
	----------	------------
	$C		$O
	$F		$OF
	$P		$OP
	$M		$OM
	$PM		$OPM
	$MARK_R		$OMARK_R
	$PMARK_R	$OPMARK_R
	$#		$O#
	$CURSOR		$OCURSOR
	$ENTRIES	$OENTRIES


・追加された内部命令

　以下の命令が新たに追加されました。

&brightness-decrement
&brightness-increment
	　&16color-brightness-{dec,inc}rement は 16 色モードにしか対応し
	ていませんでしたが、これらの命令は全ての色数に対応しています。16
	色モードにも対応しているので、今後はこの命令だけを使うことを推奨
	します。

&cal
	　式の値を計算して変数に代入します。

	例:	&cal -c winf (${winf}+1)&3
			# %winf 0～3 トグル
			# 実行後 &clear-and-redraw (-c オプション指定時)

&cdjp
	　&eject と同じ方法のメディア指定で &chdir します。

	例:	&cdjp mo0

&command-history
	　コマンドヒストリをメニューで選択し、実行します。'E'/'V' キーで
	コマンドラインの編集が出来ます。

&cont-music = &continue-music
&fade-music = &fadeout-music
&pause-music
&play-music
	　それぞれ、一時停止中の音楽の演奏再開、フェードアウト、演奏中の
	音楽の一時停止、演奏開始を行います。

&execute-binary
	　16進数で記述したバイナリを680x0マシン語サブルーチンと見なし、
	そのまま実行します。

&get-music-status
	　音楽の演奏状態を調べ、$STATUS(@stauts/@buildin)に返します。

		0	音源ドライバ未常駐
		1	未演奏または演奏終了済み
		2	一時停止中
		3	演奏中

&eject
	　指定のリムーバルメディアを排出します。メディアの指定には d: 形
	式のドライブ名による方法と、dev<n> によるデバイス名＋ユニット番
	号による方法があります。

	　dev には以下のものが指定できます。

		dat	DAT
		cd	CD-ROM ドライブ
		mo	MO ドライブ
		hd	SCSI ハードディスク
		sasi	SASI 〃
		ram	RAM ディスク
		fd	FDD

	　<n> には、排出したいメディアをドライブ名(A:～Z:)で見たとき、そ
	のドライブより前(A: の方向)に同じ dev のドライブがいくつあるかを
	指定します。つまり、dev ごとの通算のユニット番号です。

	例:	メディア	ドライブ名	dev<n>
		FDD0		A:		fd0
		FDD1		B:		fd1
		HD0-0		C:		hd0
		HD0-1		D:		hd1
		RAMDISK0	E:		ram0
		HD1-0		F:		hd2

&file-check
	　指定したファイルのサイズ、タイムスタンプ、属性を調べてユーザ変
	数に設定します。

	例:	&if ( &file-check $F ) {
			&print  "ファイル名: $F" \
				"サイズ:     $LENGTH バイト" \
				"属性:       $ATTRIBUTE" \
				"更新年月日: $TIMESTAMP"
		}

&get-volume-name
	　指定したドライブのボリュームラベルを収得します。

	例:	&get-volume-name ${O:d}:; &print $_
			# 反対側パスのボリュームラベルを表示

&maketmp
	　テンポラリファイルを作成します。シェルのリダイレクト >> などを
	使えば、作成したファイルに対し安全に出力が行えます。

&pdx-filename
	　.mdx ファイルに対する .pdx ファイルのように、&data-title で対
	応している各種データファイルが持っている副データのファイル名を収
	得します。

	　この命令はある程度複雑なまどかプログラミングでなければ意味がな
	いので、ここでは解説できません。実際の使い方はサンプルの定義ファ
	イルなどを参照して下さい。

&scsi-menu
	　SCSI 機器の選択メニューを出します。選択結果は $_ に格納されま
	す。

&set-crtc
	　画面モードを直接変更します。この命令を使う時は %agmd 1 にしな
	いと無意味です(mint によって画面モードが元に戻されるため)。

	例:	&set agmd 1;
		&set-crtc 116,11,19,99,440,6,32,432 r20=0x315
			# 画面モードを 640x400 にする

&stop-condrv
	　Console Driver のバックログ取り込みを一時停止します。全てのチ
	ェインが終了したら取り込みが再開されます。

&sync
	　OS のディスクバッファを完全に破棄します。

&touch
	　ITA TOOL BOX の touch とほぼ同じです。


・ファイル内容判別定義

　従来はオフセット＋パターンだけの判別でしたが、ファイル(の先頭が)バイナ
リデータであるかテキストデータであるかの指定が出来るようになりました。

	^^0	SCM

というように、行頭の '^' の直後、オフセットとの間に '^' を記述すると、バ
イナリファイルでなければ一致しなくなります。また、

	^~0	SCM

というように '~' を記述すると、テキストファイルでなければ一致しなくなり
ます。ただ、バイナリ/テキストの判別基準がイマイチかも知れません。


・登録メニュー

　システム変数 %regw を設定することにより、メニューの横幅を変更すること
が出来るようになりました。はみ出さないよう気をつけて下さい。


・>EXEATR

　>EXEATR という定義が新設されました。拡張子判別実行のときに対象ファイル
が拡張子を持たず、かつ実行属性がオンになっている場合、これに記述した内容
が実行されます。

　>EXEATR が定義されていない場合にそのようなファイルを判別実行しようとし
た場合は、従来と同様 ".x" という拡張子を持っているものとしてもう一度判別
実行を試みます(".x" の定義もなければ >NO_MAP に行きます)。

　この機能は、拡張子なし、実行属性オンのファイルに ".x" とは別の定義を割
り当てたい場合に使うとよいでしょう。


・&look-file のキーバインド変更

　&gvon のように、&look-file でもキーバインドが変更できるようになりまし
た。定義ファイルの @look セクションに「bind key function」の形式で指定し
ます。

prefix := shift
	| meta
	| meta ctrl
	| ctrl-x
	| ctrl-x ctrl

keycode := (@gvon で指定できるものと同じ)

key := keycode
     | prefix keycode

function := nop
	  | one-line-up
	  | one-line-down
	  | half-page-up
	  | half-page-down
	  | half-page-roll-up
	  | half-page-roll-down
	  | one-page-up
	  | one-page-down
	  | one-page-roll-up
	  | one-page-roll-down
	  | go-home-position
	  | go-last-position
	  | line-jump
	  | line-jump1
	  | line-jump2
	  | line-jump3
	  | line-jump4
	  | line-jump5
	  | line-jump6
	  | line-jump7
	  | line-jump8
	  | line-jump9
	  | line-jump$
	  | search-forward
	  | search-forward-next
	  | search-backward
	  | search-backward-next
	  | isearch-forward
	  | isearch-backward
	  | search-regexp
	  | search-regexp-next
	  | toggle-regular
	  | toggle-cr-disp
	  | toggle-tab-disp
	  | toggle-tab-size
	  | toggle-linenum-disp
	  | quit
	  | editor-tag-jump
	  | change-dump-mode
	  | toggle-color-mode
	  | toggle-exact
	  | meta
	  | ctrl-x
	  | m-write
	  | mark
	  | goto-mark
	  | exchange-point-and-mark
	  | change-kanji-code
	  | print-version

	例:
		@look
		bind	RET		quit
		bind	ctrl _X		ctrl-x
		bind	ctrl-x ctrl _C	quit
		@endm

　定義ファイルに記述する時は行頭にタブなどを入れないで下さい。この機能は
取り敢えず実装したものの、きちんとしたマニュアルが全くありません。上記の
簡易手引で分からない場合は作者に問い合わせて下さい。


・HUPAIR 対応

　mint が親プロセスから与えられた引数を解釈する時に、HUPAIR に従って文字
列をデコードするようになりました。

　また、mint が子プロセスを起動する時に、HUPAIR に従って引数をエンコード
するようになりました。ただし、子プロセス側が HUPAIR に未対応の場合はエン
コードを行いません(引数が 255 バイトを超えた場合はエラーになります)。


・madoka 強化

　バッファを動的に確保するようにしたので、大量のファイルをマークして $M
を展開した場合などにも安定動作するようになりました。

　複数の外部コマンドをチェインさせると纏めてシェルに渡していましたが、一
つ一つ自前で実行するようになりました。これは、HUPAIR 未対応のシェルへの
対策です。

　$ や & 等の特殊な記号を含むファイル名を $F などの変数で展開してシェル
に渡す時、自動的にクォーティングするようになりました。この機能は置換可能
文字列 &schr0、&schr1 で制御できます。

　マクロに引数を渡すことが出来るようになりました。
	$(macroname arg1 arg2 ...)
というように呼び出すと、マクロ内で引数を $1、$2 … で参照できます。

　詳しくは v3_madoka.man を参照して下さい。


・プラグイン

　mint の内部機能の一部を、外部プログラムで置き換えることが出来るように
なりました(これを「プラグイン」と呼びます)。現在は以下のプラグインに対応
しています。

	・%winf プラグイン
	　ファイル情報行を作成する時に呼び出されます。システム変数 %winf
	に 0xffff を設定した時のみ有効です。%winf プラグインを作成するこ
	とにより、好みの形式でファイル情報を表示することが出来ます。

	・EXIT プラグイン
	　mint が終了する時に呼び出されます。終了時に呼び出される
	>EXIT_Q 及び >EXIT_2 は mint がアボートした時には呼び出されませ
	んが、EXIT プラグインはアボートした時にも呼び出されます。通常は
	使う用途はないと思われますが、何かの役には立つかも知れません。

　組み込み方法: mint 上からプラグインを実行すると常駐し、mint に組み込ま
れます。同一タイプのプラグインを複数組み込むことも出来ますが、最初に組み
込んだプラグインは無視される可能性があります(無視されるかどうかは個々の
プラグインに依存します)。なお、mint から直接実行するのではなく、シェル等
を介してプラグインを実行した場合、組み込みが出来ない可能性があります(組
み込めるかどうかは個々のプラグインに依存します)。

　解除方法: mint を終了すると自動的に常駐解除されます。複数のプラグイン
を組み込んだ場合は(最後に組み込んだものから順に)全て常駐解除されます。

# サンプルとして用意したプラグインは、mint からの直接実行のみ対応してい
# ます。また、%winf プラグインは最後に組み込んだものだけが有効です。EXIT
# プラグインは(常駐解除時にメイン処理を行うので)組み込んだものが全て有効
# になります ── 一つしかありませんが。

	例:	>A_EXEC	-	winf_mor1.r;
				&set -c winf 0xffff;
				exit_scr.r


・その他の拡張

　定義ファイルは LF 改行で記述しても問題なく読み込めるようになりました。

　環境変数 MINTRC、MINTHIS の代わりに MINTRC3、MINTHIS3 を使うことが出来
るようになりました。これらは v3.00 以降専用の環境変数なので、v2.25 と併
用する場合に設定するとよいでしょう。


[EOF]
